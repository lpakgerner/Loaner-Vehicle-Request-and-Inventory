<?xml version="1.0" encoding="UTF-8"?><record_update sys_domain="global" table="sys_script">
    <sys_script action="INSERT_OR_UPDATE">
        <abort_action>false</abort_action>
        <access>package_private</access>
        <action_delete>false</action_delete>
        <action_insert>true</action_insert>
        <action_query>false</action_query>
        <action_update>true</action_update>
        <active>true</active>
        <add_message>false</add_message>
        <advanced>true</advanced>
        <change_fields>false</change_fields>
        <client_callable>false</client_callable>
        <collection>x_1152827_lva_vehicle_tracker</collection>
        <condition/>
        <description/>
        <execute_function>false</execute_function>
        <filter_condition/>
        <is_rest>false</is_rest>
        <message/>
        <name>creating servicing ticket</name>
        <order>125</order>
        <priority>100</priority>
        <rest_method/>
        <rest_method_text/>
        <rest_service/>
        <rest_service_text/>
        <rest_variables/>
        <role_conditions/>
        <script><![CDATA[(function executeRule(current, previous /*null when async*/) {
 //Search for existing ticket associated with the current tracker record that is open.
 const vehService = new GlideRecord ('x_1152827_lva_vehicle_servicing');
 //Create a GlideRecord object to query the servicing table.

 vehService.addQuery('vehicle_tracker', current.sys_id);
 //Add a query condition to find records where 'vehicle tracker' matches the current record's sys_id
 
 vehService.addQuery('ticket_status', 'open'); //
 //Add another query condition to find records with 'tracker_status' set to 'open'
 
 vehService.query();
 //Execute the query

 if (!vehService.next()){
    //If no matching record was found in the previous query:

    //create a new ticket record.
    const createTicket = new GlideRecord('x_1152827_lva_vehicle_servicing');
    //Create a new GlideRecord object for the vehicle servicing table

    //Get the current date to set as the service ticket's opening date.
    let gd = new GlideDate();
    //Initialize the new record.

    createTicket.setValue('vehicle_tracker', current.sys_id);
    //Set the 'vehicle tracker' field with the current record's sys_id

    createTicket.setValue('vehicle',current.vehicle);
    //Set the 'vehicle' field with the current records 'vehicle' value

    createTicket.setValue('vehicle_status','in_service');
    //Set the 'vehicle_status' field to 'in service'

    createTicket.setValue('date_sent_for_servicing',gd.getValue());
    //Set the 'date_sent_for_servicing' field to the current date
    
    //Set the 'ticket_status' field to 'open'
    createTicket.setValue('ticket_status', 'open');
    
    createTicket.insert();
    //Inserts the new ticket record into the table
 }   
    
})(current, previous);]]></script>
        <sys_class_name>sys_script</sys_class_name>
        <sys_created_by>Linder</sys_created_by>
        <sys_created_on>2024-03-15 21:03:12</sys_created_on>
        <sys_domain>global</sys_domain>
        <sys_domain_path>/</sys_domain_path>
        <sys_id>9e23c19c93c502106f3830dcebba1085</sys_id>
        <sys_mod_count>11</sys_mod_count>
        <sys_name>creating servicing ticket</sys_name>
        <sys_overrides/>
        <sys_package display_value="Loaner Vehicle Request and Inventory" source="x_1152827_lva">2899c22693d002106f3830dcebba102f</sys_package>
        <sys_policy/>
        <sys_scope display_value="Loaner Vehicle Request and Inventory">2899c22693d002106f3830dcebba102f</sys_scope>
        <sys_update_name>sys_script_9e23c19c93c502106f3830dcebba1085</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2024-05-04 13:10:16</sys_updated_on>
        <template/>
        <when>after</when>
    </sys_script>
    <sys_translated_text action="delete_multiple" query="documentkey=9e23c19c93c502106f3830dcebba1085"/>
</record_update>
